{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs26 \cf0 \ul \ulc0 Chapter 2:
\f1\b0\fs24 \ulnone \
\
Concern = a distinct behavior or piece of knowledge your software deals with. Concerns can range in granularity from how to calculate a square root to how payments are managed in an e-commerce system. You can have multiple concerns within a software solution.\
\
\
Namespacing = a way of isolating code. \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}When software grows, multiple concepts will need similar or identical names. Namespaces helps minimize collisions so it remains clear which concept the name refers to.\
{\listtext	\uc0\u8226 	}Namespaces help you make educated guesses about where code might live\
{\listtext	\uc0\u8226 	}When adding new code, existing namespaces can guide where new code should live. 
\f2\i If no obvious choice exists, a new namespace might be appropriate.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\i0 \cf0 \
When you create a variable, it is created in a particular namespace. Built-in functions are part of the \'91built-in\'92 namespace (e.g., print(), dir(), etc.)\
\
Creating a Python module automatically creates an additional namespace for that module. And each module has a 
\f2\i global
\f1\i0  namespace, which code in the module can access freely. Variables that aren\'92t nested inside the module\'92s functions are within its global namespace. In Python, though, namespaces are not explicitly created by the developer, but the code 
\f2\i structure
\f1\i0  will affect what namespaces are created and how they interact. You can also import functions, variables, & classes from other modules into the global namespace of another module.\
\
** Useful notes: \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}MODULE CONSTANTS ARE CAPITALIZED!\
{\listtext	\uc0\u8226 	}Don\'92t use `from package import *` because it can cause naming collisions and cause hard-to-debug problems. Always use explicit imports.\
{\listtext	\uc0\u8226 	}alias explicit imports if namespace collisions are unavoidable\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Classes - in many languages, classes contain a 
\f2\i constructor
\f1\i0 , which creates an instance of the class. The __init__ method is used in Python for this. The class instance has already been constructed when __init__ is called, and sets up the initial state of the instance. __init__ takes self as an argument (the instance itself) and any number of other arguments.\
}